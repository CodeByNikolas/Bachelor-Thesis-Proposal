= Abstract
Deploying cloud-based Integrated Development Environments (IDEs) at scale for education faces significant challenges in resource efficiency. The current architecture, which provisions a dedicated, resource-intensive Java Language Server for each user, leads to redundant memory and CPU consumption. This thesis addresses this scalability bottleneck by designing and implementing a shared language server architecture. The project will establish a centralized service by implementing a co-location model where isolated language server sessions run within a single shared JVM to reduce memory overhead. The success of this approach is measured by quantifiable reductions in resource usage while maintaining high performance and strict user isolation, ultimately providing a more scalable and cost-effective solution for large-scale educational platforms.