= Abstract

Cloud-based Integrated Development Environments (IDEs) are essential in modern software engineering education, but deploying them at scale presents significant challenges in resource efficiency. The current architecture, which provisions a dedicated, resource-intensive Java Language Server for each user, leads to substantial redundancy in memory and CPU consumption. This thesis proposes the design and implementation of a shared language server architecture to address this critical scalability bottleneck for platforms supporting thousands of concurrent users.

The core objective is to externalize the language server from individual IDE instances and establish a centralized service. This will be approached in two phases: first, implementing a co-location model where isolated language server sessions run within a single shared JVM to reduce memory overhead. Second, conducting a feasibility analysis of a true multi-tenant architecture that allows for shared project state. Success will be measured by quantifiable reductions in resource usage while ensuring high performance and strict user isolation, ultimately providing a scalable and cost-effective solution for large-scale educational platforms.